# -*- mode: conf; -*-
#####################################################################################
# slurmdbd.conf -- Slurm Database Daemon (SlurmDBD) configuration file for the
# '<%= scope['slurm::clustername'] %>' cluster.
#
#####################################################################################
# Documentation: https://slurm.schedmd.com/slurmdbd.conf.html
#
# This file should be only on the computer where SlurmDBD executes and should only be
# readable by the user which executes SlurmDBD (e.g. "slurm").
# /!\ This file should be protected from unauthorized access since it contains a
#     database password.
###################################################################################
# /!\ DO NOT EDIT THIS FILE: It has been automatically generated by Puppet.
#  In particular, any further changes will be overwritten at the next puppet
#  invocation
###################################################################################
#

#####################
###  General Info ###
#####################
SlurmUser=<%= scope['slurm::username'] %>
#DefaultQOS=normal,standby
# LOGGING
DebugLevel=<%= scope['slurm::slurmdbd::debuglevel'] %>
<% if scope['slurm::slurmdbd::debugflags'].empty?  -%>
#DebugFlags=
<% else -%>
DebugFlags=<%= scope['slurm::slurmdbd::debugflags'].join(',') %>
<% end -%>
LogFile=<%= scope['slurm::logdir'] %>/slurmdbd.log

<% if scope['slurm::slurmdbddebugsyslog'].empty? -%>
#DebugLevelSyslog=
<% else -%>
DebugLevelSyslog=<%= scope['slurm::slurmdbddebugsyslog']%>
<% end -%>

#PidFile=/var/run/slurmdbd.pid
# Authentication for communications with the other Slurm components
AuthType=auth/<%= scope['slurm::authtype'] %>
<% unless scope['slurm::authinfo'].empty? -%>
AuthInfo=auth/<%= scope['slurm::authinfo'] %>
<% end -%>

# How many seconds between commits on a connection from a Slurmctld. This speeds
# up inserts into the database dramatically.
# /!\ There is a [very] small probability of data loss
<% if scope['slurm::slurmdbd::commitdelay'] > 0  -%>
CommitDelay=<%= scope['slurm::slurmdbpausd::commitdelay'] %>
<% else -%>
#CommitDelay=<%= scope['slurm::slurmdbd::commitdelay'] %>
<% end -%>
#MessageTimeout=300
<% if scope['slurm::slurmdbd::privatedata'].empty?  -%>
#PrivateData=accounts,users,usage,jobs
<% else -%>
PrivateData=<%= scope['slurm::slurmdbd::privatedata'].join(',')  %>
<% end -%>

#TrackWCKey=yes
# If set the slurmdbd will mark all idle resources on the cluster as down when a
# slurmctld disconnects or is no longer reachable.
<% if scope['slurm::slurmdbd::trackslurmctlddown'] -%>
TrackSlurmctldDown=yes
<% else -%>
#TrackSlurmctldDown=
<% end -%>


#####################
###  Archive Info ###
#####################
<% if (scope['slurm::slurmdbd::archivedir'].empty? or scope['slurm::slurmdbd::archivedir'] == '/tmp') -%>
#ArchiveDir="<%= scope['slurm::slurmdbd::archivedir'] %>"
<% else -%>
ArchiveDir="<%= scope['slurm::slurmdbd::archivedir'] %>"
<% end -%>
<% if scope['slurm::slurmdbd::archiveevents'] -%>
ArchiveEvents=yes
<% else -%>
#ArchiveEvents=yes
<% end -%>
<% if scope['slurm::slurmdbd::archivejobs'] -%>
ArchiveJobs=yes
<% else -%>
#ArchiveJobs=yes
<% end -%>
<% if scope['slurm::slurmdbd::archiveresv'] -%>
ArchiveResv=yes
<% else -%>
#ArchiveResv=yes
<% end -%>
#ArchiveScript=
<% if scope['slurm::slurmdbd::archivesteps'] -%>
ArchiveSteps=yes
<% else -%>
#ArchiveSteps=yes
<% end -%>
<% if scope['slurm::slurmdbd::archivesuspend'] -%>
ArchiveSuspend=yes
<% end -%>
<% if scope['slurm::slurmdbd::archivetxn'] -%>
ArchiveTXN=yes
<% end -%>
<% if scope['slurm::slurmdbd::archiveusage'] -%>
ArchiveUsage=yes
<% end -%>

####################
### SlurmDB Info ###
####################
DbdHost=<%= scope['slurm::slurmdbd::dbdhost'] %>
DbdAddr=<%= scope['slurm::slurmdbd::dbdaddr'] %>
#DbdPort=<%= scope['slurm::slurmdbdport'] %>
<% if scope['slurm::slurmdbd::dbdbackuphost'].empty? -%>
#DbdBackupHost=
<% else -%>
DbdBackupHost=<%= scope['slurm::slurmdbd::dbdbackuphost'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgeeventafter'].nil? -%>
# Events happening on the cluster over this age are purged from the database
PurgeEventAfter=<%= scope['slurm::slurmdbd::purgeeventafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgejobafter'].nil? -%>
# Individual job records over this age are purged from the database.
PurgeJobAfter=<%= scope['slurm::slurmdbd::purgejobafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgeresvafter'].nil? -%>
PurgeResvAfter=<%= scope['slurm::slurmdbd::purgeresvafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgestepafter'].nil? -%>
PurgeStepAfter=<%= scope['slurm::slurmdbd::purgestepafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgesuspendafter'].nil? -%>
PurgeSuspendAfter=<%= scope['slurm::slurmdbd::purgesuspendafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgetxnafter'].nil? -%>
PurgeTXNAfter=<%= scope['slurm::slurmdbd::purgetxnafter'] %>
<% end -%>
<% unless scope['slurm::slurmdbd::purgeusageafter'].nil? -%>
PurgeUsageAfter=<%= scope['slurm::slurmdbd::purgeusageafter'] %>
<% end -%>

#####################
### Database Info ###
#####################
StorageType=accounting_storage/<%= scope['slurm::slurmdbd::storagetype'] %>
StorageHost=<%= scope['slurm::slurmdbd::storagehost'] %>
<% if scope['slurm::slurmdbd::storagebackuphost'].empty? -%>
#StorageBackupHost=
<% else -%>
StorageBackupHost=<%= scope['slurm::slurmdbd::storagebackuphost'] %>
<% end -%>
StoragePort=<%= scope['slurm::slurmdbd::storageport'] %>
StorageLoc=<%= scope['slurm::slurmdbd::storageloc'].ljust(12) %>   # Name of the database
StorageUser=<%= scope['slurm::slurmdbd::storageuser'] %>
# /!\ Password used to gain access to the database
StoragePass=<%= scope['slurm::slurmdbd::storagepass'] %>
